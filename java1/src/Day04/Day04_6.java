package Day04;

import java.util.Random;
import java.util.Scanner;

public class Day04_6 { // cs
	
	/* 삼목게임[틱택토 게임]
	 * 	게임판 9칸 생성 
	 * 	1. String[] 배열 = new String[9]
	 * 사용자에게 0~8 인덱스번호 입력받기
	 * 	1. 해당 인덱스에 O 표시
	 * 	2. 이미 둔 자리는 재 입력 
	 * 컴퓨터는 0~8 사이 난수 발생
	 * 	1. 해당 인덱스에 X 표시
	 * 	2. 이미 둔 자리는 재 난수 생성 
	 * 승리판단
	 * 	1. 가로 인덱스들의 모양이 모두 동일하면
	 * 		└ 012 345 678
	 * 			첫번째 인덱스가 0부터 6까지 3씩증가
	 * 			두번째 : 첫번째+1
	 * 			세번째 : 첫번째+2
	 * 	2. 세로 인덱스들의 모양이 모두 동일하면
	 * 		└ 036 147 258
	 * 	3. 대각선 인덱스들의 모양이 모두 동일하면 
	 * 		└ 048 246
	 * 무승부판단(과제) -> 알이 9개이거나 공백이 0개이면
	 */
	
	public static void main(String[] args) { // ms
		
		// 준비
		Scanner scanner = new Scanner(System.in);
		String[] 게임판 = {"[ ]", "[ ]", "[ ]",
							"[ ]", "[ ]", "[ ]",
							"[ ]", "[ ]", "[ ]"};	// String 객체 9개를 저장할 수 있는 배열선언
		String 승리알 = ""; // 3목이 되었을 때 해당 알을 저장
		
		// 게임실행
		while(true) { // 무한루프 종료조건 : 1. 9칸 모두 알이 있을경우 2. 승리자가 나왔을때(3목이 되었을때)
			
			// 게임판 출력[배열 내 모든 인덱스 출력]
			for(int i = 0; i<게임판.length; i++) {
				System.out.print(게임판[i]);
				
				// 인덱스 2 5 8 이면 줄바꿈
				if(i%3==2) System.out.println();
			} // for e
			
			///////////////////////////////////////////////////////////
			// 1. 플레이어 위치(인덱스) 선택
			while(true) {
				System.out.print("위치 선택 : ");	int 위치 = scanner.nextInt();
				if(게임판[위치].equals("[ ]")) {
					// 선택한 위치가 공백이면 알 두기
					게임판[위치]="[O]";
					break;
				}else {
				System.out.println("알림)) 해당 위치에 이미 알이 존재. [재선택]");
				} // else e
			} // while e[플레이어가 정상 입력시 break;]
			
			//////////////////////////////////////////////////////////
			// 2. 컴퓨터 입력

				while(true) {
					Random random = new Random();		// 1. 난수 객체 생성
					int 컴퓨터위치 = random.nextInt(9);		// 2. 0~8 사이의 난수 int형으로 가져오기
					if(게임판[컴퓨터위치].equals("[ ]")) {	// 3. 해당 난수위치가 공백이면
						// 난수 위치에 공백이면 X 알 두기
						게임판[컴퓨터위치]="[X]";
						break;							// 4. 알을 두었으면 반복문 탈출
					} // if e
				} // while e[난수가 공백위치를 생성했을 경우에 break;]
			//////////////////////////////////////////////////////////	
			// 3. 승리자 판단
				// 1. 가로로 이기는 수
//				if(게임판[0].equals(게임판[1]) && 게임판[1].equals(게임판[2]));
//				if(게임판[3].equals(게임판[4]) && 게임판[4].equals(게임판[5]));
//				if(게임판[6].equals(게임판[7]) && 게임판[7].equals(게임판[8]));
				
				for(int i = 0; i<=6; i+=3) {
					//* i 는 0부터 6까지 3씩 증가 -> 0 3 6 -> 3회
					if(게임판[i].equals(게임판[i+1]) && 게임판[i+1].equals(게임판[i+2])) {
						// 0 인덱스 == 1 인덱스 이면서
						승리알 = 게임판[i]; // 동일한 알을 승리알 변수에 대입
					} // if e

				} // for e
				
				// 2. 세로로 이기는 수
				for(int i = 0; i<=2; i++) { // i는 0부터 2까지 1씩 증가 -> 0 1 2 -> 3회
					if(게임판[i].equals(게임판[i+3]) && 게임판[i+3].equals(게임판[i+6])) {
						승리알 = 게임판[i];
					} // if e
				} // for e
				
				// 3. 대각선으로 이기는 수
				if(게임판[0].equals(게임판[4]) && 게임판[4].equals(게임판[8])) {
					승리알 = 게임판[0];
				} //if e
				if(게임판[2].equals(게임판[4]) && 게임판[4].equals(게임판[6])) {
					승리알 = 게임판[2];
				} //if e
				
			//////////////////////////////////////////////////////////	
			// 4. 게임종료
				if(승리알.equals("[O]")) {
					System.out.println("알림)) 플레이어 승리");
					break;
				} // if e
				if(승리알.equals("[X]")) {
					System.out.println("알림)) 컴퓨터 승리");
					break;
				} // if e
			//////////////////////////////////////////////////////////	
			// 5. 무승부
				
				
				
				
		} // while e[게임종료]
		
		for(int i = 0; i<게임판.length; i++) {
			System.out.print(게임판[i]);
			
			// 인덱스 2 5 8 이면 줄바꿈
			if(i%3==2) System.out.println();
		} // for e
		
	} // me

} // ce
